<?php
/**********************************************************************************************
Renvoi un fichier au format souhaité contenant les données souhaitées en provenance de notre base
le lien d'accès à pour format :
http://www.refuges.info/exportation/exportations.php?format=kmz&
Ne pas changer l'adresse à la légère :
ATTENTION :Openlayers est basé sur cette adresse, l'export aussi,
des sites partenaires aussi peut-être !

**********************************************************************************************/

require_once("../include/config.php");
require_once("../include/fonctions_exportations.php");

//Nous allons récupérer la liste des points souhaités en fonction des paramètres demandés
//Pour des raisons de performance de la carte gmaps qui ne demande pas de limite, on ne donne 
//qu'un nombre limité de points, les exportations devront penser à passer &limite=sans pour tout avoir
//sly 
//Pour plus de flexibilité, il me semblerait plus logique de laisser le soin aux applications de faire elles même leur choix de limite
//et que par défaut il n'y ait pas de limite justement
// Peut-être au passage au tout OpenLayers il serait bien d'y passer sly 28/10/2010

// MODIF DOMINIQUE : utilisé par OpenLayers
if (!$_GET["limite"])
	$conditions->limite=120;
else if ($_GET["limite"]!="sans")
	$conditions->limite = $_GET ["limite"]; 
	
// DOMINIQUE : Ajout du paramètre bbox au format utilisé par OpenLayers
// SLY : remplacement de l'ancien format pour ne garder que celui d'openlayers : &bbox=ouest,sud,est,nord
if (isset ($_GET ['bbox']))
{
  $bbox=explode(",",$_GET ['bbox']);
  $conditions->latitude_minimum=$bbox [1];
  $conditions->latitude_maximum=$bbox [3];
  $conditions->longitude_minimum=$bbox [0];
  $conditions->longitude_maximum=$bbox [2];
}

$conditions->type_point=$_GET['liste_id_point_type'];
$conditions->pas_les_points_caches=1;
$conditions->ordre="point_type.importance DESC, points_gps.longitude DESC";
$conditions->liste_id_point=$_GET['liste_id_point'];
$conditions->id_polygone=$_GET['liste_id_massif'];
$conditions->avec_infos_massif=1;

$format_export=$_GET['format'];

/* cas spécial du format gpi (ou n'importe quel autre qu'on voudrait gérer par gpsbabel en fait) on passe par du gpx et 
 on laisse gpsbabel faire la conversion, je pourrais l'incorporer à la fonction elle même qui ferait alors un très
 joli appel à elle-même, mais pour des raisons de chemins d'accès à gpsbabel ça ne marcherait de toute façon pas
 partout sly 30/10/10
*/
/*
if ($format_export=="gpi")
{
  $en_gpx=fichier_exportation($conditions,"gpx-garmin");
  $name=rand(1,2000);
  file_put_contents("./$name",$en_gpx->contenu);
  $gpi=shell_exec("cat ./$name | ./gpsbabel -w -r -t -i gpx -f - -o garmin_gpi -F -");
  $infos_donnees_exportees->contenu=$gpi;
  $infos_donnees_exportees->nom_fichier=$en_gpx->nom_fichier;
  unlink($name);
}
else
*/

//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//function fichier_exportation2($conditions,$format_export) 
//{
	  global $config;
	  //obtenir le tableau des points, selon les conditions
	  $liste_points=liste_points($conditions); 
	  //print_r($liste_points);
	  //Nombre de point récupéré(s), on va permettre de faire du comsétique avec le bon nom de fichier si un seul
	  $i=0;
	  if ($liste_points->nombre_points==1)
		$nom=replace_url($liste_points->points->$i->nom);
	  else
		$nom=$config['nom_fichier_export'];
	  
	  /** selon le type, en créer le bon entête de fichier **/
	  $contenu=entete_exportation($format_export);
	  
		// Dominique 24/11/12 Dédoublement des points proches
		//DEBUG http://www.refuges.info/exportations/exportations.php?format=gml&debug=oui&bbox=5,45,5.5,45.6		
		if ($icones = $_GET ['icones']) { // Nombres d'icones qui, mises côte à côte, remplissent la largeur de la carte
			$delta_latitude  = ($conditions->latitude_maximum  - $conditions->latitude_minimum ) / $icones;
			$delta_longitude = ($conditions->longitude_maximum - $conditions->longitude_minimum) / $icones;

			if ($delta_latitude && $delta_longitude) // S'il y a un BBOX
				foreach ($liste_points->points as $a => $p)
					for ($b=0; $b<$a; $b++) {// Pour toutes les paires de points $a, $b
						$dlat = $liste_points->points->$a->latitude  - $liste_points->points->$b->latitude;
						$dlon = $liste_points->points->$a->longitude - $liste_points->points->$b->longitude;
						if ($dlat / $delta_latitude * $dlat / $delta_latitude + $dlon / $delta_longitude * $dlon / $delta_longitude < 1) {
							if ($dlat < 0) // $b a une plus grande latitude
								$deplacement_latitude = $dlat + $delta_latitude;
							else // $a a une plus grande latitude
								$deplacement_latitude = $dlat - $delta_latitude;

							if ($dlon < 0)  // $b a une plus grande longitude
								$deplacement_longitude = $dlon + $delta_longitude;
							else // $a a une plus grande longitude
								$deplacement_longitude = $dlon - $delta_longitude;
								
							$liste_points->points->$a->latitude  -= $deplacement_latitude  / 2;
							$liste_points->points->$b->latitude  += $deplacement_latitude  / 2;
							$liste_points->points->$a->longitude -= $deplacement_longitude / 3;
							$liste_points->points->$b->longitude += $deplacement_longitude / 3;
						}
					}
		}

	  $kml_folder="";
	  
	//------------------------------------------
	if ($liste_points->nombre_points>0) // si nous n'avons aucun point dans la recherche, on renvoi un fichier valide, mais sans les points dedans
	{
	  foreach ($liste_points->points as $k => $point)
	  {
		// Petite bidouille un peu séciale, dans le mode carte, on souhaite changer les icônes de certains point dont les critères justifie une icone différente
		// sly 12/05/2010
		// FIXME : On notera un défaut lorsque l'abri est sommaire ET détruit il faudrait une 3ème combinaison d'icône
		// sly 30/10/10
		
		// S'il est sommaire ou qu'il n'a aucune place pour dormir et qu'il a l'icone pour ça
		if ( ($point->sommaire=='oui') OR ($point->places==0) AND $point->nom_icone_sommaire!='')
		  $point->nom_icone=$point->nom_icone_sommaire;

		// Si le point est "fermé" ou "détruit" ou "ruines" et qu'il a une icone spéciale "fermée" on la choisie 
		if ($point->ferme!='non' and $point->ferme!='' AND $point->nom_icone_ferme!='')
		  $point->nom_icone=$point->nom_icone_ferme;
		
	   /*
		switch ($format)
		{
	//------------------------------------------
		  case "kmz":case "kml":
		// Dans le cas du kml/kmz, on arrange les points par "dossier"
		// c'est un conteneur xml qui permet une légende plus claire de GoogleEarth
		if ($point->nom_type!=$kml_folder)
		{ // visiblement on change de dossier
		if ($kml_folder!="") // si ce n'est pas le premier dossier, on ferme le précédent
		  $contenu.="</Folder>\r\n";
		// on créer le nouveau dossier
		$contenu.="<Folder><name>$point->nom_type</name>\r\n<open>0</open>";
		// on met à jour notre variable pour pas créer un nouveau dossier à chaque fois
		$kml_folder=$point->nom_type;
		}
		$contenu.=placemark_kml($point);
		break;
	//------------------------------------------
		  case "gml":

		$contenu.=feature_gml($point,$format);
		break;
	//------------------------------------------
		  case "gpx-garmin":case "gpx":case "gpx-carte":
		$contenu.=waypoint_gpx($point,$format);
		break;
	//------------------------------------------
		  case "csv":
		$contenu.=csv_export_line($point);
		break;
	//------------------------------------------
		}
		$last_point=$point;
		*/
		$point->url = lien_point_fast ($point);
		$liste_points->points->$k = $point;
		$poi [$point->nom_icone] [] = $point;
	  }
	}
	//------------------------------------------
	  /*** ici on s'occupe des choses à faire en fin de fichier ***/
/*
	  if ($format=="kmz" or $format=="kml")
	  {
		$contenu.="</Folder>\r\n</Document>\r\n</kml>";
		
		// si c'est du kmz, alors on compresse la sortie
		if ($format=="kmz")
		{
		  $zip = new zipfile() ; //on crée un fichier zip
		  $zip->addfile($contenu, $nom.".kml") ; //on ajoute le fichier
		  $contenu = $zip->file() ; //on associe l'archive
		}
	  }
	  
	  elseif ($format=="gml")
		$contenu.="\n</wfs:FeatureCollection>";
		
	  // les formats fournissant du gpx, se terminent tous par cette simple balise
	  elseif ($config['formats_exportation'][$format]['extension_fichier'] =="gpx")
		$contenu.="</gpx>";
	  
	  $resultat->contenu=$contenu;
*/	  
//*DCM*/echo'<pre>'.var_export($liste_points,true).'</pre>';

	  //return $liste_points->points;
//	  return $poi;
//}
  /*** Appel à la fonction principal qui nous fourni notre fichier, selon le format ***/
  //$infos_donnees_exportees=fichier_exportation2($conditions,$format_export);

//*DCM*/echo'<pre>'.var_export($infos_donnees_exportees->liste_points->points,true).'</pre>';
$description = "Points d'intérêts et traces référencés sur le site refuge-info";
//$poi =   $infos_donnees_exportees;
echo 'debug';
  
include ("vues/$format_export.php");
?>