Opération :
Tentative de migration de la base mysql vers postgresql :

* Dump du sql de prod de mysql 
* Parce que l'outil d'ensuite ne gère pas bien les tinyint(1) en les remplaçant par des boolean dans postgresql et phpbb ne fonctionne plus
on les remplaces par des int :
cat dump.sql | sed s/"tinyint(.*)"/"int(11)"/g > refuges2.sql
* ré-import dans mysql
* on vire les colonnes gis de points_gps et polygones
* on dégage les tables zzz_segments et appartenance_polygone
* de la table points_gps on vire ceux qui sont des points de polygones
* on lance une conversion py-mysql2pgsql avec comme fichier : mysql2pgsql.yml ci présent

Du fichier sql généré, il faut encore faire des modifs à la main :

que phpbb rentre en 0 ou 1 mais que l'outil de conversion à transformé en t ou f
(1)
cat test.sql |sed s/"date_derniere_modification\" date NOT NULL"/"date_derniere_modification\" date"/ | sed s/"date_photo\" date NOT NULL"/"date_photo\" date"/> bool-to-int.sql 

* on dump dans psql : cat test.sql | psql refuges (avec l'utilisateur refuges)

* Dans polygones (sauf si cette table n'est finalement pas re-dumpée) : enlever les contraintes "NOT NULL" sur source, message, url_exterieur et articles partitifs

* on vire le champs id_exterieur,source_exterieur de la table points
* On autorise la valeure 'null' pour presque tous les champs de points

* Gestion des contraintes "NOT NULL" qui ne devrait pas l'être chez nous :
(on peut soit faire ça après l'import, soit avant dans le dump sql directement mais c'est un peu à la main
comme fait avant (1))

ALTER TABLE commentaires ALTER COLUMN auteur DROP NOT NULL;
ALTER TABLE points ALTER COLUMN nom_createur DROP NOT NULL;
ALTER TABLE points ALTER COLUMN site_officiel DROP NOT NULL;
ALTER TABLE points ALTER COLUMN remark DROP NOT NULL;
ALTER TABLE points ALTER COLUMN site_officiel DROP NOT NULL;
ALTER TABLE points ALTER COLUMN proprio DROP NOT NULL;





